@model chuloon.Models.Order

@{
    ViewData["Title"] = "Edit Order";
}
<h3>Edit Order</h3>
<hr />
<div class="row">
    <div class="col-sm-12">
        <dl>
            <dt>Restaurant:</dt>
            <dd>@Model.PickUp.Restaurant.Name</dd>

            <dt>Pickup:</dt>
            <dd>
                <img class="user-image" src="@Model.PickUp.PickupUser.ImageOrDefault" />
                @Model.PickUp.PickupUser.NicknameOrUser - @Model.PickUp.PickupTime.ToString("M/d/yyyy HH:mm")
            </dd>
            <dt>Order for:</dt>
            <dd>
                <img class="user-image" src="@Model.User.ImageOrDefault" />            
                @Model.User.NicknameOrUser
            </dd>
        </dl>
    </div>
</div>

<div class="row">
    <div class="col-sm-12">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <input type="hidden" asp-for="PickupId" />
            <input type="hidden" asp-for="UserId" />

            <table class="table">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Size</th>
                        <th>Price</th>
                        <th>Qty</th>
                        <th>Note</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @for(int i = 0; i < Model.OrderItems.Count; i++)
                    {
                        <tr>
                            <td>@Html.HiddenFor(item => @Model.OrderItems[i].Id) @Model.OrderItems[i].MenuItem.Name</td>
                            <td>@Model.OrderItems[i].PriceName</td>
                            <td>@Model.OrderItems[i].Price</td>
                            <td>@Html.EditorFor(item => @Model.OrderItems[i].Qty)</td>
                            <td>@Html.EditorFor(item => @Model.OrderItems[i].Note)</td>
                            <td><a asp-action="Delete" asp-controller="OrderItems" asp-route-id="@Model.OrderItems[i].Id"
                                   class="text-danger">Remove</a></td>
                        </tr>

                    }

                </tbody>
            </table>


            <div class="form-group">
                <h4>Total: @Model.Total.ToString("$.00")</h4>
                <div class="checkbox">
                    <label>
                        <input asp-for="Paid" /> @Html.DisplayNameFor(model => model.Paid)
                    </label>
                </div>
            </div>
            <div class="form-group">
                <input type="submit" name="action" value="Save" class="btn btn-primary" />
                <input type="submit" name="action" value="Cancel Order" class="btn btn-danger" onclick="return confirm('Confirm Cancel Order')"  />
                <a asp-action="Details" asp-controller="Pickups" asp-route-id="@Model.PickupId" class="btn btn-outline-secondary">Return to Order</a>
            </div>
        </form>
    </div>
</div>

<hr />
<div>
    @await Component.InvokeAsync("Menu", new { restaurantId = Model.PickUp.RestaurantId, addToOrderId = Model.Id })
</div>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
